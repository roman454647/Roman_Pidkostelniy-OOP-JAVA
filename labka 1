лабка 1
public class SquareRoot {

	public static void main(String[] args) {
		double a = 3;
		double b = 2.5;
		double c = -0.5;

double x_1, x_2, d;
        
		if (b*b - 4*a*c>=0 & a!=0 ) {
			d =Math.sqrt(b*b - (4*a*c));
			x_1 = ((-b) + d)/(2*a);
			x_2 = ((-b) - d)/(2*a);
			System.out.println("x1="+ x_1);
			System.out.println("x2="+ x_2);
		}
		else if(a==0 & b==0 | b*b - 4*a*c<0 ) {
			System.out.println("x1=");
			System.out.println("x2=");
		}
        else{
        System.out.println("x1="+ 0.0);
			System.out.println("x2="+0.0);
        }
	}
}
2.
public class MatrixPrint {
	public static void main(String args[]){
int j = 0;
		for (int i = 0 ; i<5; i++) {
			for (int k = 0; k<5; k++) {
				 j++;	
				 if(j==1 | j==5 | j==7 | j== 9 | j==13 | j== 17 | j==19 | j==21 | j==25) {
          System.out.print(" ");
					 System.out.print("*");
       System.out.print(" ");
       
				 }
				 else {
					 if (j<10) {   System.out.print(" ");
						 System.out.print(j);
	       System.out.print(" ");}
	       else {System.out.print(j);
	       System.out.print(" ");}
				 }
       
			}
			
			System.out.println();
		}
	}
}
3.
public class ArraySort {

	public static void main(String[] args) {
		int[] array = {30, 2, 10, 4, 6};
		int length = array.length;

		 for(int i = (length - 1) ; i > 0 ; i--){
	        for(int j = 0 ; j < i ; j++){
	           
	            if( array[j] > array[j+1] ){
	                int tmp = array[j];
	                array[j] = array[j+1];
	                array[j+1] = tmp;
	            }
	        }
	    }

		for (int i = 0; i < length; i++) {
			System.out.print(array[i] + " ");
		}
	}
}
4.binary search
public class BinarySearch {

	public static void main(String[] args) {
		
		int data[] = { 3, 6, 7, 10, 34, 56, 60 };
		int numberToFind = 10;
		
		int s = 0;
		int f = data.length - 1;
		int middle = (s + f)/2;
		
		while(s<=f ) {
			 middle = (s + f)/2;
			if (data[middle] == numberToFind ) {
				System.out.println(middle);
				break;
			}
		
		
		if(numberToFind > data[middle]) {
			s = middle + 1;
			
		}
		 if(numberToFind < data[middle]){
			
			f = middle - 1;
			
		}
		
		
	}
		if(data[middle] != numberToFind) {
		System.out.println(-1);
		
		}
		
	}
		
	}
